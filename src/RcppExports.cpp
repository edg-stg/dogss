// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// CppEigenInv
Eigen::MatrixXd CppEigenInv(Eigen::MatrixXd X);
RcppExport SEXP _dogss_CppEigenInv(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(CppEigenInv(X));
    return rcpp_result_gen;
END_RCPP
}
// CppEigenWoodbury
Eigen::MatrixXd CppEigenWoodbury(Eigen::VectorXd V2, Eigen::MatrixXd X, Eigen::VectorXd Sigma2_0);
RcppExport SEXP _dogss_CppEigenWoodbury(SEXP V2SEXP, SEXP XSEXP, SEXP Sigma2_0SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type V2(V2SEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type X(XSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type Sigma2_0(Sigma2_0SEXP);
    rcpp_result_gen = Rcpp::wrap(CppEigenWoodbury(V2, X, Sigma2_0));
    return rcpp_result_gen;
END_RCPP
}
// CppEigenVtimesNu
Eigen::VectorXd CppEigenVtimesNu(Eigen::MatrixXd V, Eigen::VectorXd nu);
RcppExport SEXP _dogss_CppEigenVtimesNu(SEXP VSEXP, SEXP nuSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type V(VSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type nu(nuSEXP);
    rcpp_result_gen = Rcpp::wrap(CppEigenVtimesNu(V, nu));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_dogss_CppEigenInv", (DL_FUNC) &_dogss_CppEigenInv, 1},
    {"_dogss_CppEigenWoodbury", (DL_FUNC) &_dogss_CppEigenWoodbury, 3},
    {"_dogss_CppEigenVtimesNu", (DL_FUNC) &_dogss_CppEigenVtimesNu, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_dogss(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
